{"version":3,"sources":["../src/comment-section.js"],"names":["createComment","content","options","Ajax","call","methodname","args","comments","contextid","component","commentarea","itemid","deleteComment","id","onDeleteCommentClicked","el","loadComments","onCommentFormSubmit","renderCommentForm","context","templates","render","html","commentFormContainer","querySelector","replaceNodeContents","commentForm","onsubmit","value","renderCommentList","commentListContainer","querySelectorAll","forEach","button","addEventListener","e","dataset","preventDefault","response","renderCommentSection","init"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Comment section module.\n *\n * @module     core_comment/comments\n * @package    core_comment\n * @copyright  2021 TU Berlin\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport * as templates from 'core/templates';\n\nconst createComment = async(content, options) => {\n    await Ajax.call([\n        {methodname: 'core_comment_create_comments', args: {\n            comments: [\n                {\n                    contextid: options.contextid,\n                    component: options.component,\n                    commentarea: options.commentarea,\n                    itemid: options.itemid,\n                    content: content,\n                }\n            ],\n        }},\n    ])[0];\n};\n\nconst deleteComment = async(id) => {\n    await Ajax.call([\n        {methodname: 'core_comment_delete_comments', args: {comments: [id]}},\n    ])[0];\n};\n\nconst onDeleteCommentClicked = async(id, el, options) => {\n    await deleteComment(id);\n    await loadComments(el, options);\n};\n\nconst onCommentFormSubmit = async(content, el, options) => {\n    await createComment(content, options);\n    await loadComments(el, options);\n};\n\nconst renderCommentForm = async(el, options) => {\n    const context = {};\n    const html = await templates.render('core_comment/comment_form', context);\n    const commentFormContainer = el.querySelector('.js-comment-form-container');\n    templates.replaceNodeContents(commentFormContainer, html, '');\n    const commentForm = commentFormContainer.querySelector('form');\n    commentForm.onsubmit = function() {\n        onCommentFormSubmit(this.content.value, el, options);\n        return false;\n    };\n};\n\nconst renderCommentList = async(comments, el, options) => {\n    const context = {\n        comments: comments\n    };\n    const html = await templates.render('core_comment/comment_list', context);\n    const commentListContainer = el.querySelector('.js-comment-list-container');\n    templates.replaceNodeContents(commentListContainer, html, '');\n    commentListContainer.querySelectorAll(\".js-delete-comment\").forEach(button =>\n        button.addEventListener('click', (e) => {\n            onDeleteCommentClicked(button.dataset.id, el, options);\n            e.preventDefault();\n            return false;\n        })\n    );\n};\n\nconst loadComments = async(el, options) => {\n    const response = await Ajax.call([\n        {methodname: 'core_comment_get_comments', args: {\n            contextid: options.contextid,\n            component: options.component,\n            commentarea: options.commentarea,\n            itemid: options.itemid\n        }},\n    ])[0];\n    await renderCommentList(response.comments, el, options);\n};\n\nconst renderCommentSection = async(el, options) => {\n    const context = {};\n    const html = await templates.render('core_comment/comment_section', context);\n    templates.replaceNodeContents(el, html, '');\n    await renderCommentForm(el, options);\n};\n\nexport const init = async(el, options) => {\n    await renderCommentSection(el, options);\n    await loadComments(el, options);\n};\n"],"file":"comment-section.min.js"}